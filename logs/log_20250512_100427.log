2025-05-12 10:04:27,663 [INFO] root - 程序启动，日志文件: C:\Users\mengy\Desktop\ZK_LogicBom_Builder\logs\log_20250512_100427.log
2025-05-12 10:04:27,906 [INFO] __main__ - 正在启动程序...
2025-05-12 10:04:27,906 [DEBUG] __main__ - Python版本: 3.13.2 (tags/v3.13.2:4f8bb39, Feb  4 2025, 15:23:48) [MSC v.1942 64 bit (AMD64)]
2025-05-12 10:04:27,906 [DEBUG] __main__ - 当前工作目录: C:\Users\mengy\Desktop\ZK_LogicBom_Builder
2025-05-12 10:04:27,906 [DEBUG] __main__ - src_dir路径: c:\Users\mengy\Desktop\ZK_LogicBom_Builder
2025-05-12 10:04:27,927 [INFO] __main__ - 正在创建语言选择对话框...
2025-05-12 10:04:29,416 [INFO] gui.language_dialog_tk - 已选择语言: zh
2025-05-12 10:04:29,451 [INFO] __main__ - 语言选择结果: zh
2025-05-12 10:04:29,451 [INFO] __main__ - 正在创建主题选择对话框...
2025-05-12 10:04:29,451 [DEBUG] gui.theme_dialog_tk - 创建主题选择对话框
2025-05-12 10:04:29,458 [DEBUG] gui.theme_dialog_tk - 主题选择对话框创建完成
2025-05-12 10:04:30,296 [DEBUG] gui.theme_dialog_tk - 用户选择了light主题
2025-05-12 10:04:30,319 [INFO] __main__ - 主题选择结果: light
2025-05-12 10:04:30,335 [INFO] __main__ - 正在配置主窗口...
2025-05-12 10:04:30,478 [INFO] __main__ - 开始创建MainWindow实例...
2025-05-12 10:04:30,478 [INFO] core.logic_builder - 从 C:\Users\mengy\Desktop\ZK_LogicBom_Builder\data\temp_rules_latest.json 加载时检测到新版规则文件格式 (BL_rules/TL_rules)。
2025-05-12 10:04:30,478 [INFO] core.logic_builder - 已加载 4 条规则从 C:\Users\mengy\Desktop\ZK_LogicBom_Builder\data\temp_rules_latest.json
2025-05-12 10:04:30,536 [INFO] gui.logic_panel - 规则未加载状态，等待用户确认后再加载规则
2025-05-12 10:04:30,547 [INFO] __main__ - MainWindow实例创建完成
2025-05-12 10:04:30,777 [INFO] __main__ - 开始mainloop()...
2025-05-12 10:04:32,364 [INFO] core.config_processor - 找到工作表: ['1.Kabine']
2025-05-12 10:04:32,364 [INFO] core.config_processor - 处理工作表: 1.Kabine -> 模块: 1.Kabine
2025-05-12 10:04:32,386 [INFO] gui.config_panel - 成功导入配置文件: C:/Users/mengy/Desktop/Kabinemekrmal(Test).xlsx
2025-05-12 10:04:32,389 [INFO] gui.main_window_tk - 成功保存配置文件路径到app_config.json: C:/Users/mengy/Desktop/Kabinemekrmal(Test).xlsx
2025-05-12 10:04:32,389 [INFO] gui.config_panel - 已保存配置文件路径到app_config.json: C:/Users/mengy/Desktop/Kabinemekrmal(Test).xlsx
2025-05-12 10:04:33,614 [INFO] core.bom_processor - 开始导入BOM文件: C:/Users/mengy/Desktop/Bom.xlsx
2025-05-12 10:04:33,614 [INFO] core.bom_processor - 已清空现有数据
2025-05-12 10:04:33,614 [INFO] core.bom_processor - 正在读取Excel文件...
2025-05-12 10:04:33,619 [INFO] core.bom_processor - 成功打开Excel文件，包含以下工作表: ['Max-Gruppe']
2025-05-12 10:04:33,619 [INFO] core.bom_processor - 正在读取 Max-Gruppe 工作表...
2025-05-12 10:04:33,632 [INFO] core.bom_processor - 成功读取工作表，共 154 行数据
2025-05-12 10:04:33,632 [INFO] core.bom_processor - 所有必需列均存在，开始处理数据...
2025-05-12 10:04:33,634 [INFO] core.bom_processor - 过滤空层级后剩余 153 行数据
2025-05-12 10:04:33,634 [INFO] core.bom_processor - 
开始处理数据...
2025-05-12 10:04:33,638 [INFO] core.bom_processor - 
数据处理完成，成功处理 {processed_count} 行数据
2025-05-12 10:04:33,638 [INFO] core.bom_processor - 第 1 级节点数量: 1
2025-05-12 10:04:33,639 [INFO] core.bom_processor - 第 2 级节点数量: 133
2025-05-12 10:04:33,639 [INFO] core.bom_processor - 第 3 级节点数量: 19
2025-05-12 10:04:33,639 [INFO] core.bom_processor - BOM文件导入成功，共处理 153 个项目
2025-05-12 10:04:33,639 [INFO] gui.bom_panel - 成功导入BOM文件: C:/Users/mengy/Desktop/Bom.xlsx
2025-05-12 10:04:33,639 [INFO] gui.bom_panel - 开始刷新树状图
2025-05-12 10:04:33,640 [INFO] gui.bom_panel - 树状图刷新完成
2025-05-12 10:04:33,641 [INFO] gui.main_window_tk - 成功保存BOM文件路径到app_config.json: C:/Users/mengy/Desktop/Bom.xlsx
2025-05-12 10:04:33,641 [INFO] gui.bom_panel - 已保存BOM文件路径到app_config.json: C:/Users/mengy/Desktop/Bom.xlsx
2025-05-12 10:04:34,129 [INFO] core.logic_builder - 准备从临时文件加载规则: C:\Users\mengy\Desktop\ZK_LogicBom_Builder\data\temp_rules_latest.json
2025-05-12 10:04:34,130 [INFO] core.logic_builder - 加载时检测到新版大写键名规则文件格式 (BL_rules/TL_rules) 从 C:\Users\mengy\Desktop\ZK_LogicBom_Builder\data\temp_rules_latest.json。
2025-05-12 10:04:34,130 [INFO] gui.logic_panel - 收到规则变更事件: type=imported, rule_id=None
2025-05-12 10:04:34,130 [INFO] gui.logic_panel - 规则未加载状态，等待用户确认
2025-05-12 10:04:34,131 [INFO] core.logic_builder - 从临时文件 (C:\Users\mengy\Desktop\ZK_LogicBom_Builder\data\temp_rules_latest.json) 加载 4 条规则完成。导出状态: False
2025-05-12 10:04:34,131 [INFO] gui.main_window_tk - 检测到LogicBuilder中存在未导出的规则。
2025-05-12 10:04:34,722 [INFO] gui.main_window_tk - 用户确认加载未导出的规则。MainWindow.rules_loaded 设置为 True。
2025-05-12 10:04:34,723 [INFO] gui.main_window_tk - 开始刷新逻辑面板显示已加载的临时规则
2025-05-12 10:04:34,723 [INFO] gui.logic_panel - 开始加载规则到已保存规则框架
2025-05-12 10:04:34,723 [DEBUG] gui.logic_panel - 从LogicBuilder获取到 4 条规则
2025-05-12 10:04:34,724 [DEBUG] gui.logic_panel - 添加规则ID: 1 到已使用集合
2025-05-12 10:04:34,724 [DEBUG] gui.logic_panel - 添加规则ID: 2 到已使用集合
2025-05-12 10:04:34,725 [DEBUG] gui.logic_panel - 添加规则ID: 3 到已使用集合
2025-05-12 10:04:34,725 [DEBUG] gui.logic_panel - 添加规则ID: 1 到已使用集合
2025-05-12 10:04:34,725 [INFO] gui.logic_panel - 成功加载 4 条规则到已保存规则框架
2025-05-12 10:04:34,726 [INFO] gui.main_window_tk - 逻辑面板显示刷新完成
2025-05-12 10:05:06,007 [DEBUG] gui.config_panel - ConfigPanel: 双击选中项 ID: I04C
2025-05-12 10:05:06,008 [DEBUG] gui.config_panel - ConfigPanel: 选中项文本: K-200-000261 Standardsitze
2025-05-12 10:05:06,008 [DEBUG] gui.config_panel - ConfigPanel: 提取的代码: K-200-000261
2025-05-12 10:05:06,009 [INFO] gui.config_panel - ConfigPanel: 准备插入特征值: K-200-000261
2025-05-12 10:05:06,009 [DEBUG] gui.config_panel - ConfigPanel: 获取根窗口成功
2025-05-12 10:05:06,009 [DEBUG] gui.config_panel - ConfigPanel: 获取MainWindow实例成功
2025-05-12 10:05:06,010 [DEBUG] gui.config_panel - ConfigPanel: 找到逻辑面板
2025-05-12 10:05:06,010 [DEBUG] gui.logic_panel - LogicPanel: 开始插入代码: K-200-000261
2025-05-12 10:05:06,010 [INFO] gui.logic_panel - LogicPanel: 输入历史 - 类型: K_code, 内容: K-200-000261, 当前表达式: K-200-000261 
2025-05-12 10:05:06,011 [INFO] gui.config_panel - ConfigPanel: 成功发送代码到逻辑面板: K-200-000261
2025-05-12 10:05:13,297 [INFO] gui.logic_panel - LogicPanel: 输入历史 - 类型: operator, 内容: AND, 当前表达式: K-200-000261  AND 
2025-05-12 10:05:17,716 [DEBUG] gui.config_panel - ConfigPanel: 双击选中项 ID: I07C
2025-05-12 10:05:17,718 [DEBUG] gui.config_panel - ConfigPanel: 选中项文本: K-200-000250 o. Airbag- u. Gurtstraffersys.
2025-05-12 10:05:17,719 [DEBUG] gui.config_panel - ConfigPanel: 提取的代码: K-200-000250
2025-05-12 10:05:17,719 [INFO] gui.config_panel - ConfigPanel: 准备插入特征值: K-200-000250
2025-05-12 10:05:17,720 [DEBUG] gui.config_panel - ConfigPanel: 获取根窗口成功
2025-05-12 10:05:17,721 [DEBUG] gui.config_panel - ConfigPanel: 获取MainWindow实例成功
2025-05-12 10:05:17,722 [DEBUG] gui.config_panel - ConfigPanel: 找到逻辑面板
2025-05-12 10:05:17,723 [DEBUG] gui.logic_panel - LogicPanel: 开始插入代码: K-200-000250
2025-05-12 10:05:17,724 [INFO] gui.logic_panel - LogicPanel: 输入历史 - 类型: K_code, 内容: K-200-000250, 当前表达式: K-200-000261  AND K-200-000250 
2025-05-12 10:05:17,725 [INFO] gui.config_panel - ConfigPanel: 成功发送代码到逻辑面板: K-200-000250
2025-05-12 10:05:50,139 [DEBUG] gui.config_panel - ConfigPanel: 双击选中项 ID: I067
2025-05-12 10:05:50,140 [DEBUG] gui.config_panel - ConfigPanel: 选中项文本: K-200-000021 Standardsitze
2025-05-12 10:05:50,141 [DEBUG] gui.config_panel - ConfigPanel: 提取的代码: K-200-000021
2025-05-12 10:05:50,141 [INFO] gui.config_panel - ConfigPanel: 准备插入特征值: K-200-000021
2025-05-12 10:05:50,142 [DEBUG] gui.config_panel - ConfigPanel: 获取根窗口成功
2025-05-12 10:05:50,143 [DEBUG] gui.config_panel - ConfigPanel: 获取MainWindow实例成功
2025-05-12 10:05:50,143 [DEBUG] gui.config_panel - ConfigPanel: 找到逻辑面板
2025-05-12 10:05:50,144 [DEBUG] gui.logic_panel - LogicPanel: 开始插入代码: K-200-000021
2025-05-12 10:05:50,145 [INFO] gui.logic_panel - LogicPanel: 输入历史 - 类型: K_code, 内容: K-200-000021, 当前表达式: K-200-000021 
2025-05-12 10:05:50,146 [INFO] gui.config_panel - ConfigPanel: 成功发送代码到逻辑面板: K-200-000021
2025-05-12 10:06:04,371 [INFO] gui.logic_panel - LogicPanel: 输入历史 - 类型: operator, 内容: OR, 当前表达式: K-200-000021  OR 
2025-05-12 10:06:08,318 [DEBUG] gui.config_panel - ConfigPanel: 双击选中项 ID: I06B
2025-05-12 10:06:08,320 [DEBUG] gui.config_panel - ConfigPanel: 选中项文本: K-200-000024 Actiontower mit Rollladen
2025-05-12 10:06:08,320 [DEBUG] gui.config_panel - ConfigPanel: 提取的代码: K-200-000024
2025-05-12 10:06:08,321 [INFO] gui.config_panel - ConfigPanel: 准备插入特征值: K-200-000024
2025-05-12 10:06:08,322 [DEBUG] gui.config_panel - ConfigPanel: 获取根窗口成功
2025-05-12 10:06:08,323 [DEBUG] gui.config_panel - ConfigPanel: 获取MainWindow实例成功
2025-05-12 10:06:08,324 [DEBUG] gui.config_panel - ConfigPanel: 找到逻辑面板
2025-05-12 10:06:08,324 [DEBUG] gui.logic_panel - LogicPanel: 开始插入代码: K-200-000024
2025-05-12 10:06:08,326 [INFO] gui.logic_panel - LogicPanel: 输入历史 - 类型: K_code, 内容: K-200-000024, 当前表达式: K-200-000021  OR K-200-000024 
2025-05-12 10:06:08,326 [INFO] gui.config_panel - ConfigPanel: 成功发送代码到逻辑面板: K-200-000024
2025-05-12 10:06:26,907 [INFO] gui.logic_panel - LogicPanel: 输入历史 - 类型: operator, 内容: OR, 当前表达式: K-200-000021  OR K-200-000024  OR 
2025-05-12 10:06:28,450 [DEBUG] gui.config_panel - ConfigPanel: 双击选中项 ID: I06D
2025-05-12 10:06:28,451 [DEBUG] gui.config_panel - ConfigPanel: 选中项文本: K-200-000289 Gerätewände für Ausrüstung
2025-05-12 10:06:28,452 [DEBUG] gui.config_panel - ConfigPanel: 提取的代码: K-200-000289
2025-05-12 10:06:28,453 [INFO] gui.config_panel - ConfigPanel: 准备插入特征值: K-200-000289
2025-05-12 10:06:28,453 [DEBUG] gui.config_panel - ConfigPanel: 获取根窗口成功
2025-05-12 10:06:28,454 [DEBUG] gui.config_panel - ConfigPanel: 获取MainWindow实例成功
2025-05-12 10:06:28,454 [DEBUG] gui.config_panel - ConfigPanel: 找到逻辑面板
2025-05-12 10:06:28,455 [DEBUG] gui.logic_panel - LogicPanel: 开始插入代码: K-200-000289
2025-05-12 10:06:28,456 [INFO] gui.logic_panel - LogicPanel: 输入历史 - 类型: K_code, 内容: K-200-000289, 当前表达式: K-200-000021  OR K-200-000024  OR K-200-000289 
2025-05-12 10:06:28,456 [INFO] gui.config_panel - ConfigPanel: 成功发送代码到逻辑面板: K-200-000289
2025-05-12 10:06:35,410 [INFO] gui.logic_panel - LogicPanel: 输入历史 - 类型: operator, 内容: AND, 当前表达式: K-200-000021  OR K-200-000024  OR K-200-000289  AND 
2025-05-12 10:06:36,870 [INFO] gui.logic_panel - LogicPanel: 输入历史 - 类型: bracket, 内容: (, 当前表达式: K-200-000021  OR K-200-000024  OR K-200-000289  AND (
2025-05-12 10:07:05,409 [DEBUG] gui.config_panel - ConfigPanel: 双击选中项 ID: I073
2025-05-12 10:07:05,410 [DEBUG] gui.config_panel - ConfigPanel: 选中项文本: K-200-000026 Standardsitze
2025-05-12 10:07:05,410 [DEBUG] gui.config_panel - ConfigPanel: 提取的代码: K-200-000026
2025-05-12 10:07:05,411 [INFO] gui.config_panel - ConfigPanel: 准备插入特征值: K-200-000026
2025-05-12 10:07:05,412 [DEBUG] gui.config_panel - ConfigPanel: 获取根窗口成功
2025-05-12 10:07:05,412 [DEBUG] gui.config_panel - ConfigPanel: 获取MainWindow实例成功
2025-05-12 10:07:05,413 [DEBUG] gui.config_panel - ConfigPanel: 找到逻辑面板
2025-05-12 10:07:05,414 [DEBUG] gui.logic_panel - LogicPanel: 开始插入代码: K-200-000026
2025-05-12 10:07:05,415 [INFO] gui.logic_panel - LogicPanel: 输入历史 - 类型: K_code, 内容: K-200-000026, 当前表达式: K-200-000021  OR K-200-000024  OR K-200-000289  AND ( K-200-000026 
2025-05-12 10:07:05,415 [INFO] gui.config_panel - ConfigPanel: 成功发送代码到逻辑面板: K-200-000026
2025-05-12 10:07:17,470 [INFO] gui.logic_panel - LogicPanel: 输入历史 - 类型: operator, 内容: OR, 当前表达式: K-200-000021  OR K-200-000024  OR K-200-000289  AND ( K-200-000026  OR 
2025-05-12 10:07:23,667 [DEBUG] gui.config_panel - ConfigPanel: 双击选中项 ID: I076
2025-05-12 10:07:23,668 [DEBUG] gui.config_panel - ConfigPanel: 选中项文本: K-200-000288 Gerätewände für Ausrüstung
2025-05-12 10:07:23,669 [DEBUG] gui.config_panel - ConfigPanel: 提取的代码: K-200-000288
2025-05-12 10:07:23,670 [INFO] gui.config_panel - ConfigPanel: 准备插入特征值: K-200-000288
2025-05-12 10:07:23,671 [DEBUG] gui.config_panel - ConfigPanel: 获取根窗口成功
2025-05-12 10:07:23,672 [DEBUG] gui.config_panel - ConfigPanel: 获取MainWindow实例成功
2025-05-12 10:07:23,673 [DEBUG] gui.config_panel - ConfigPanel: 找到逻辑面板
2025-05-12 10:07:23,673 [DEBUG] gui.logic_panel - LogicPanel: 开始插入代码: K-200-000288
2025-05-12 10:07:23,674 [INFO] gui.logic_panel - LogicPanel: 输入历史 - 类型: K_code, 内容: K-200-000288, 当前表达式: K-200-000021  OR K-200-000024  OR K-200-000289  AND ( K-200-000026  OR K-200-000288 
2025-05-12 10:07:23,675 [INFO] gui.config_panel - ConfigPanel: 成功发送代码到逻辑面板: K-200-000288
2025-05-12 10:07:25,755 [INFO] gui.logic_panel - LogicPanel: 输入历史 - 类型: bracket, 内容: ), 当前表达式: K-200-000021  OR K-200-000024  OR K-200-000289  AND ( K-200-000026  OR K-200-000288 )
2025-05-12 10:07:41,202 [INFO] core.logic_builder - 准备从临时文件加载规则: C:\Users\mengy\Desktop\ZK_LogicBom_Builder\data\temp_rules_latest.json
2025-05-12 10:07:41,203 [INFO] core.logic_builder - 加载时检测到新版大写键名规则文件格式 (BL_rules/TL_rules) 从 C:\Users\mengy\Desktop\ZK_LogicBom_Builder\data\temp_rules_latest.json。
2025-05-12 10:07:41,203 [INFO] gui.logic_panel - 收到规则变更事件: type=imported, rule_id=None
2025-05-12 10:07:41,203 [INFO] gui.logic_panel - 规则已加载状态，开始更新已保存规则框架
2025-05-12 10:07:41,203 [INFO] gui.logic_panel - 开始加载规则到已保存规则框架
2025-05-12 10:07:41,203 [DEBUG] gui.logic_panel - 从LogicBuilder获取到 4 条规则
2025-05-12 10:07:41,204 [DEBUG] gui.logic_panel - 添加规则ID: 1 到已使用集合
2025-05-12 10:07:41,204 [DEBUG] gui.logic_panel - 添加规则ID: 2 到已使用集合
2025-05-12 10:07:41,204 [DEBUG] gui.logic_panel - 添加规则ID: 3 到已使用集合
2025-05-12 10:07:41,205 [DEBUG] gui.logic_panel - 添加规则ID: 1 到已使用集合
2025-05-12 10:07:41,205 [INFO] gui.logic_panel - 成功加载 4 条规则到已保存规则框架
2025-05-12 10:07:41,205 [INFO] core.logic_builder - 从临时文件 (C:\Users\mengy\Desktop\ZK_LogicBom_Builder\data\temp_rules_latest.json) 加载 4 条规则完成。导出状态: False
2025-05-12 10:07:41,206 [INFO] gui.logic_library_window - 已加载 4 条规则
2025-05-12 10:07:45,520 [INFO] core.logic_builder - 已保存 3 条规则到临时文件 (C:\Users\mengy\Desktop\ZK_LogicBom_Builder\data\temp_rules_latest.json)
2025-05-12 10:07:45,521 [INFO] gui.logic_panel - 收到规则变更事件: type=deleted, rule_id=BL01
2025-05-12 10:07:45,521 [INFO] gui.logic_panel - 已删除规则: BL01
2025-05-12 10:07:45,521 [INFO] gui.logic_library_window - 收到规则变更事件: type=deleted, rule_id=BL01
2025-05-12 10:07:45,521 [INFO] gui.logic_library_window - 已删除规则: BL01
2025-05-12 10:07:48,817 [INFO] core.logic_builder - 已保存 2 条规则到临时文件 (C:\Users\mengy\Desktop\ZK_LogicBom_Builder\data\temp_rules_latest.json)
2025-05-12 10:07:48,817 [CRITICAL] __main__ - 未捕获的异常: 1
Traceback (most recent call last):
  File "D:\Python\Lib\tkinter\__init__.py", line 2068, in __call__
    return self.func(*args)
           ~~~~~~~~~^^^^^^^
  File "c:\Users\mengy\Desktop\ZK_LogicBom_Builder\gui\logic_panel.py", line 629, in _delete_rule
    self.used_bl_rule_ids.remove(rule_number)  # 从已使用集合中移除
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^
KeyError: 1
2025-05-12 10:07:48,852 [CRITICAL] __main__ - 详细错误栈:
['Traceback (most recent call last):\n', '  File "D:\\Python\\Lib\\tkinter\\__init__.py", line 2068, in __call__\n    return self.func(*args)\n           ~~~~~~~~~^^^^^^^\n', '  File "c:\\Users\\mengy\\Desktop\\ZK_LogicBom_Builder\\gui\\logic_panel.py", line 629, in _delete_rule\n    self.used_bl_rule_ids.remove(rule_number)  # 从已使用集合中移除\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^\n', 'KeyError: 1\n']
Traceback (most recent call last):
  File "D:\Python\Lib\tkinter\__init__.py", line 2068, in __call__
    return self.func(*args)
           ~~~~~~~~~^^^^^^^
  File "c:\Users\mengy\Desktop\ZK_LogicBom_Builder\gui\logic_panel.py", line 629, in _delete_rule
    self.used_bl_rule_ids.remove(rule_number)  # 从已使用集合中移除
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^
KeyError: 1
2025-05-12 10:07:51,357 [INFO] core.logic_builder - 已保存 1 条规则到临时文件 (C:\Users\mengy\Desktop\ZK_LogicBom_Builder\data\temp_rules_latest.json)
2025-05-12 10:07:51,358 [INFO] core.logic_builder - 已保存 1 条规则到临时文件 (C:\Users\mengy\Desktop\ZK_LogicBom_Builder\data\temp_rules_latest.json)
2025-05-12 10:07:51,358 [INFO] core.logic_builder - 规则数据已保存到文件: C:\Users\mengy\Desktop\ZK_LogicBom_Builder\data\temp_rules_latest.json
2025-05-12 10:07:51,358 [INFO] gui.logic_panel - 收到规则变更事件: type=deleted, rule_id=BL03
2025-05-12 10:07:51,359 [INFO] gui.logic_library_window - 收到规则变更事件: type=deleted, rule_id=BL03
2025-05-12 10:07:51,359 [INFO] gui.logic_library_window - 已删除规则: BL03
2025-05-12 10:07:53,711 [CRITICAL] __main__ - 未捕获的异常: 1
Traceback (most recent call last):
  File "D:\Python\Lib\tkinter\__init__.py", line 2068, in __call__
    return self.func(*args)
           ~~~~~~~~~^^^^^^^
  File "c:\Users\mengy\Desktop\ZK_LogicBom_Builder\gui\logic_panel.py", line 629, in _delete_rule
    self.used_bl_rule_ids.remove(rule_number)  # 从已使用集合中移除
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^
KeyError: 1
2025-05-12 10:07:53,712 [CRITICAL] __main__ - 详细错误栈:
['Traceback (most recent call last):\n', '  File "D:\\Python\\Lib\\tkinter\\__init__.py", line 2068, in __call__\n    return self.func(*args)\n           ~~~~~~~~~^^^^^^^\n', '  File "c:\\Users\\mengy\\Desktop\\ZK_LogicBom_Builder\\gui\\logic_panel.py", line 629, in _delete_rule\n    self.used_bl_rule_ids.remove(rule_number)  # 从已使用集合中移除\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^\n', 'KeyError: 1\n']
Traceback (most recent call last):
  File "D:\Python\Lib\tkinter\__init__.py", line 2068, in __call__
    return self.func(*args)
           ~~~~~~~~~^^^^^^^
  File "c:\Users\mengy\Desktop\ZK_LogicBom_Builder\gui\logic_panel.py", line 629, in _delete_rule
    self.used_bl_rule_ids.remove(rule_number)  # 从已使用集合中移除
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^
KeyError: 1
2025-05-12 10:07:55,987 [INFO] core.logic_builder - 已保存 0 条规则到临时文件 (C:\Users\mengy\Desktop\ZK_LogicBom_Builder\data\temp_rules_latest.json)
2025-05-12 10:07:55,987 [INFO] core.logic_builder - 已保存 0 条规则到临时文件 (C:\Users\mengy\Desktop\ZK_LogicBom_Builder\data\temp_rules_latest.json)
2025-05-12 10:07:55,987 [INFO] core.logic_builder - 规则数据已保存到文件: C:\Users\mengy\Desktop\ZK_LogicBom_Builder\data\temp_rules_latest.json
2025-05-12 10:07:55,988 [INFO] gui.logic_panel - 收到规则变更事件: type=deleted, rule_id=BL02
2025-05-12 10:07:55,988 [INFO] gui.logic_library_window - 收到规则变更事件: type=deleted, rule_id=BL02
2025-05-12 10:07:55,988 [INFO] gui.logic_library_window - 已删除规则: BL02
2025-05-12 10:07:58,418 [CRITICAL] __main__ - 未捕获的异常: 1
Traceback (most recent call last):
  File "D:\Python\Lib\tkinter\__init__.py", line 2068, in __call__
    return self.func(*args)
           ~~~~~~~~~^^^^^^^
  File "c:\Users\mengy\Desktop\ZK_LogicBom_Builder\gui\logic_panel.py", line 629, in _delete_rule
    self.used_bl_rule_ids.remove(rule_number)  # 从已使用集合中移除
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^
KeyError: 1
2025-05-12 10:07:58,419 [CRITICAL] __main__ - 详细错误栈:
['Traceback (most recent call last):\n', '  File "D:\\Python\\Lib\\tkinter\\__init__.py", line 2068, in __call__\n    return self.func(*args)\n           ~~~~~~~~~^^^^^^^\n', '  File "c:\\Users\\mengy\\Desktop\\ZK_LogicBom_Builder\\gui\\logic_panel.py", line 629, in _delete_rule\n    self.used_bl_rule_ids.remove(rule_number)  # 从已使用集合中移除\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^\n', 'KeyError: 1\n']
Traceback (most recent call last):
  File "D:\Python\Lib\tkinter\__init__.py", line 2068, in __call__
    return self.func(*args)
           ~~~~~~~~~^^^^^^^
  File "c:\Users\mengy\Desktop\ZK_LogicBom_Builder\gui\logic_panel.py", line 629, in _delete_rule
    self.used_bl_rule_ids.remove(rule_number)  # 从已使用集合中移除
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^
KeyError: 1
2025-05-12 10:08:01,586 [CRITICAL] __main__ - 未捕获的异常: 1
Traceback (most recent call last):
  File "D:\Python\Lib\tkinter\__init__.py", line 2068, in __call__
    return self.func(*args)
           ~~~~~~~~~^^^^^^^
  File "c:\Users\mengy\Desktop\ZK_LogicBom_Builder\gui\logic_panel.py", line 629, in _delete_rule
    self.used_bl_rule_ids.remove(rule_number)  # 从已使用集合中移除
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^
KeyError: 1
2025-05-12 10:08:01,587 [CRITICAL] __main__ - 详细错误栈:
['Traceback (most recent call last):\n', '  File "D:\\Python\\Lib\\tkinter\\__init__.py", line 2068, in __call__\n    return self.func(*args)\n           ~~~~~~~~~^^^^^^^\n', '  File "c:\\Users\\mengy\\Desktop\\ZK_LogicBom_Builder\\gui\\logic_panel.py", line 629, in _delete_rule\n    self.used_bl_rule_ids.remove(rule_number)  # 从已使用集合中移除\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^\n', 'KeyError: 1\n']
Traceback (most recent call last):
  File "D:\Python\Lib\tkinter\__init__.py", line 2068, in __call__
    return self.func(*args)
           ~~~~~~~~~^^^^^^^
  File "c:\Users\mengy\Desktop\ZK_LogicBom_Builder\gui\logic_panel.py", line 629, in _delete_rule
    self.used_bl_rule_ids.remove(rule_number)  # 从已使用集合中移除
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^
KeyError: 1
2025-05-12 10:08:22,164 [WARNING] gui.logic_panel - 表达式验证失败: 表达式必须且只能包含一个→
2025-05-12 10:08:35,174 [INFO] gui.logic_panel - LogicPanel: 输入历史 - 类型: operator, 内容: →, 当前表达式: K-200-000021  OR K-200-000024  OR K-200-000289  AND ( K-200-000026  OR K-200-000288 ) → 
