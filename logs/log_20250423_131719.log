2025-04-23 13:17:19,285 [INFO] root - 程序启动，日志文件: C:\Users\mengy\Desktop\ZK_LogicBom_Builder\logs\log_20250423_131719.log
2025-04-23 13:17:19,523 [INFO] __main__ - 正在启动程序...
2025-04-23 13:17:19,523 [DEBUG] __main__ - Python版本: 3.13.2 (tags/v3.13.2:4f8bb39, Feb  4 2025, 15:23:48) [MSC v.1942 64 bit (AMD64)]
2025-04-23 13:17:19,524 [DEBUG] __main__ - 当前工作目录: C:\Users\mengy\Desktop\ZK_LogicBom_Builder
2025-04-23 13:17:19,524 [DEBUG] __main__ - src_dir路径: c:\Users\mengy\Desktop\ZK_LogicBom_Builder
2025-04-23 13:17:19,551 [INFO] __main__ - 正在创建语言选择对话框...
2025-04-23 13:17:22,058 [INFO] gui.language_dialog_tk - 已选择语言: zh
2025-04-23 13:17:22,083 [INFO] __main__ - 语言选择结果: zh
2025-04-23 13:17:22,084 [INFO] __main__ - 正在创建主题选择对话框...
2025-04-23 13:17:22,084 [DEBUG] gui.theme_dialog_tk - 创建主题选择对话框
2025-04-23 13:17:22,087 [DEBUG] gui.theme_dialog_tk - 主题选择对话框创建完成
2025-04-23 13:17:22,912 [DEBUG] gui.theme_dialog_tk - 用户选择了light主题
2025-04-23 13:17:22,935 [INFO] __main__ - 主题选择结果: light
2025-04-23 13:17:22,949 [INFO] __main__ - 正在配置主窗口...
2025-04-23 13:17:23,165 [INFO] __main__ - 开始创建MainWindow实例...
2025-04-23 13:17:23,166 [INFO] core.logic_builder - 已加载 6 条规则
2025-04-23 13:17:23,280 [INFO] __main__ - MainWindow实例创建完成
2025-04-23 13:17:23,576 [INFO] __main__ - 开始mainloop()...
2025-04-23 13:17:25,425 [INFO] core.config_processor - 找到工作表: ['TD', '0.模板&Vorlage', '1.Fahrgestell', '2.Fahrzeug allgemein', '3.Beschriftung&Kennzeichnung', '4. Anbauten&Fahrgestellarbeiten', '5. Fahrer_Mannschaftsraum', '6.Koffer', '7.Lichtmast', '8.Pumpenanlage', '9.Seilwinde&Generator', '10.Halterungen']
2025-04-23 13:17:25,425 [DEBUG] core.config_processor - 跳过工作表: TD
2025-04-23 13:17:25,425 [DEBUG] core.config_processor - 跳过工作表: 0.模板&Vorlage
2025-04-23 13:17:25,426 [INFO] core.config_processor - 处理工作表: 1.Fahrgestell -> 模块: 1.Fahrgestell
2025-04-23 13:17:25,443 [INFO] core.config_processor - 处理工作表: 2.Fahrzeug allgemein -> 模块: 2.Fahrzeug allgemein
2025-04-23 13:17:25,459 [INFO] core.config_processor - 处理工作表: 3.Beschriftung&Kennzeichnung -> 模块: 3.Beschriftung&Kennzeichnung
2025-04-23 13:17:25,476 [INFO] core.config_processor - 处理工作表: 4. Anbauten&Fahrgestellarbeiten -> 模块: 4.Anbauten&Fahrgestellarbeiten
2025-04-23 13:17:25,490 [INFO] core.config_processor - 处理工作表: 5. Fahrer_Mannschaftsraum -> 模块: 5.Fahrer_Mannschaftsraum
2025-04-23 13:17:25,511 [INFO] core.config_processor - 处理工作表: 6.Koffer -> 模块: 6.Koffer
2025-04-23 13:17:25,526 [INFO] core.config_processor - 处理工作表: 7.Lichtmast -> 模块: 7.Lichtmast
2025-04-23 13:17:25,541 [INFO] core.config_processor - 处理工作表: 8.Pumpenanlage -> 模块: 8.Pumpenanlage
2025-04-23 13:17:25,558 [INFO] core.config_processor - 处理工作表: 9.Seilwinde&Generator -> 模块: 9.Seilwinde&Generator
2025-04-23 13:17:25,572 [INFO] core.config_processor - 处理工作表: 10.Halterungen -> 模块: 10.Halterungen
2025-04-23 13:17:25,587 [INFO] gui.config_panel - 成功导入配置文件: C:/Users/mengy/Desktop/配置选项_Konfigurationsoptions.xlsm
2025-04-23 13:17:25,590 [INFO] gui.main_window_tk - 成功保存配置文件路径到app_config.json: C:/Users/mengy/Desktop/配置选项_Konfigurationsoptions.xlsm
2025-04-23 13:17:25,591 [INFO] gui.config_panel - 已保存配置文件路径到app_config.json: C:/Users/mengy/Desktop/配置选项_Konfigurationsoptions.xlsm
2025-04-23 13:17:26,732 [INFO] core.bom_processor - 开始导入BOM文件: C:/Users/mengy/Desktop/BOM映射表.xlsx
2025-04-23 13:17:26,739 [INFO] core.bom_processor - 找到工作表: ['MAX-gruppe', 'K码表', '配置', 'Sheet1']
2025-04-23 13:17:26,755 [INFO] core.bom_processor - BOM文件导入成功
2025-04-23 13:17:26,756 [INFO] gui.bom_panel - 成功导入BOM文件: C:/Users/mengy/Desktop/BOM映射表.xlsx
2025-04-23 13:17:26,758 [INFO] gui.main_window_tk - 成功保存BOM文件路径到app_config.json: C:/Users/mengy/Desktop/BOM映射表.xlsx
2025-04-23 13:17:26,759 [INFO] gui.bom_panel - 已保存BOM文件路径到app_config.json: C:/Users/mengy/Desktop/BOM映射表.xlsx
2025-04-23 13:17:30,466 [DEBUG] gui.config_panel - ConfigPanel: 双击选中项 ID: I0C5
2025-04-23 13:17:30,467 [DEBUG] gui.config_panel - ConfigPanel: 选中项文本: K04_03_01 ohne
2025-04-23 13:17:30,467 [DEBUG] gui.config_panel - ConfigPanel: 提取的代码: K04_03_01
2025-04-23 13:17:30,468 [INFO] gui.config_panel - ConfigPanel: 准备插入K码: K04_03_01
2025-04-23 13:17:30,468 [DEBUG] gui.config_panel - ConfigPanel: 获取根窗口成功
2025-04-23 13:17:30,469 [DEBUG] gui.config_panel - ConfigPanel: 获取MainWindow实例成功
2025-04-23 13:17:30,469 [DEBUG] gui.config_panel - ConfigPanel: 找到逻辑面板
2025-04-23 13:17:30,469 [DEBUG] gui.logic_panel - LogicPanel: 开始插入代码: K04_03_01
2025-04-23 13:17:30,469 [INFO] gui.logic_panel - LogicPanel: 输入历史 - 类型: K_code, 内容: K04_03_01, 当前表达式: K04_03_01 
2025-04-23 13:17:30,469 [INFO] gui.config_panel - ConfigPanel: 成功发送代码到逻辑面板: K04_03_01
2025-04-23 13:17:31,844 [INFO] gui.logic_panel - LogicPanel: 输入历史 - 类型: operator, 内容: →, 当前表达式: K04_03_01  → 
2025-04-23 13:17:32,561 [DEBUG] gui.bom_panel - BomPanel: 双击选中项 ID: I001
2025-04-23 13:17:32,561 [DEBUG] gui.bom_panel - BomPanel: 选中项文本: [1] PL-Kabine 0000000010017913NK - Modulkabine S301000 / S302000
(Modulkabine S301000 / S302000)
2025-04-23 13:17:32,562 [DEBUG] gui.bom_panel - BomPanel: 提取到占位符: PL-Kabine, Baugruppe: 0000000010017913NK
2025-04-23 13:17:32,562 [INFO] gui.bom_panel - BomPanel: 准备插入BOM码: PL-Kabine-0000000010017913NK
2025-04-23 13:17:32,563 [DEBUG] gui.bom_panel - BomPanel: 获取根窗口成功
2025-04-23 13:17:32,564 [DEBUG] gui.bom_panel - BomPanel: 获取MainWindow实例成功
2025-04-23 13:17:32,564 [DEBUG] gui.bom_panel - BomPanel: 找到逻辑面板
2025-04-23 13:17:32,565 [DEBUG] gui.logic_panel - LogicPanel: 开始插入代码: PL-Kabine-0000000010017913NK
2025-04-23 13:17:32,565 [DEBUG] gui.logic_panel - 验证BOM码: PL-Kabine-0000000010017913NK
2025-04-23 13:17:32,566 [INFO] gui.logic_panel - LogicPanel: 输入历史 - 类型: BOM_code, 内容: PL-Kabine-0000000010017913NK, 当前表达式: K04_03_01  → PL-Kabine-0000000010017913NK 
2025-04-23 13:17:32,567 [INFO] gui.bom_panel - BomPanel: 成功发送代码到逻辑面板: PL-Kabine-0000000010017913NK
2025-04-23 13:17:33,040 [DEBUG] gui.bom_panel - BomPanel: 双击选中项 ID: I001
2025-04-23 13:17:33,041 [DEBUG] gui.bom_panel - BomPanel: 选中项文本: [1] PL-Kabine 0000000010017913NK - Modulkabine S301000 / S302000
(Modulkabine S301000 / S302000)
2025-04-23 13:17:33,042 [DEBUG] gui.bom_panel - BomPanel: 提取到占位符: PL-Kabine, Baugruppe: 0000000010017913NK
2025-04-23 13:17:33,043 [INFO] gui.bom_panel - BomPanel: 准备插入BOM码: PL-Kabine-0000000010017913NK
2025-04-23 13:17:33,044 [DEBUG] gui.bom_panel - BomPanel: 获取根窗口成功
2025-04-23 13:17:33,044 [DEBUG] gui.bom_panel - BomPanel: 获取MainWindow实例成功
2025-04-23 13:17:33,045 [DEBUG] gui.bom_panel - BomPanel: 找到逻辑面板
2025-04-23 13:17:33,046 [DEBUG] gui.logic_panel - LogicPanel: 开始插入代码: PL-Kabine-0000000010017913NK
2025-04-23 13:17:34,656 [INFO] gui.bom_panel - BomPanel: 成功发送代码到逻辑面板: PL-Kabine-0000000010017913NK
2025-04-23 13:18:11,650 [DEBUG] gui.config_panel - ConfigPanel: 双击选中项 ID: I0BB
2025-04-23 13:18:11,652 [DEBUG] gui.config_panel - ConfigPanel: 选中项文本: K04_02_03 800 l
2025-04-23 13:18:11,653 [DEBUG] gui.config_panel - ConfigPanel: 提取的代码: K04_02_03
2025-04-23 13:18:11,654 [INFO] gui.config_panel - ConfigPanel: 准备插入K码: K04_02_03
2025-04-23 13:18:11,655 [DEBUG] gui.config_panel - ConfigPanel: 获取根窗口成功
2025-04-23 13:18:11,656 [DEBUG] gui.config_panel - ConfigPanel: 获取MainWindow实例成功
2025-04-23 13:18:11,656 [DEBUG] gui.config_panel - ConfigPanel: 找到逻辑面板
2025-04-23 13:18:11,657 [DEBUG] gui.logic_panel - LogicPanel: 开始插入代码: K04_02_03
2025-04-23 13:18:11,658 [INFO] gui.logic_panel - LogicPanel: 输入历史 - 类型: K_code, 内容: K04_02_03, 当前表达式: K04_02_03 
2025-04-23 13:18:11,659 [INFO] gui.config_panel - ConfigPanel: 成功发送代码到逻辑面板: K04_02_03
2025-04-23 13:18:13,608 [INFO] gui.logic_panel - LogicPanel: 输入历史 - 类型: operator, 内容: →, 当前表达式: K04_02_03  → 
2025-04-23 13:18:14,192 [DEBUG] gui.bom_panel - BomPanel: 双击选中项 ID: I008
2025-04-23 13:18:14,193 [DEBUG] gui.bom_panel - BomPanel: 选中项文本: [2] PL-GrundKabine 10019237 - Modulkabine Standard MAN Euro 6
Modul cabin standard MAN Euro 6
(Z-Cab NG Alpas 3 RAL 9010
Z-Cab NG Alpas 3 RAL 9010)
2025-04-23 13:18:14,193 [DEBUG] gui.bom_panel - BomPanel: 提取到占位符: PL-GrundKabine, Baugruppe: 10019237
2025-04-23 13:18:14,193 [INFO] gui.bom_panel - BomPanel: 准备插入BOM码: PL-GrundKabine-10019237
2025-04-23 13:18:14,194 [DEBUG] gui.bom_panel - BomPanel: 获取根窗口成功
2025-04-23 13:18:14,194 [DEBUG] gui.bom_panel - BomPanel: 获取MainWindow实例成功
2025-04-23 13:18:14,194 [DEBUG] gui.bom_panel - BomPanel: 找到逻辑面板
2025-04-23 13:18:14,194 [DEBUG] gui.logic_panel - LogicPanel: 开始插入代码: PL-GrundKabine-10019237
2025-04-23 13:18:14,195 [DEBUG] gui.logic_panel - 验证BOM码: PL-GrundKabine-10019237
2025-04-23 13:18:14,195 [INFO] gui.logic_panel - LogicPanel: 输入历史 - 类型: BOM_code, 内容: PL-GrundKabine-10019237, 当前表达式: K04_02_03  → PL-GrundKabine-10019237 
2025-04-23 13:18:14,195 [INFO] gui.bom_panel - BomPanel: 成功发送代码到逻辑面板: PL-GrundKabine-10019237
2025-04-23 13:18:23,892 [DEBUG] gui.config_panel - ConfigPanel: 双击选中项 ID: I0BA
2025-04-23 13:18:23,893 [DEBUG] gui.config_panel - ConfigPanel: 选中项文本: K04_02_02 600 l
2025-04-23 13:18:23,894 [DEBUG] gui.config_panel - ConfigPanel: 提取的代码: K04_02_02
2025-04-23 13:18:23,895 [INFO] gui.config_panel - ConfigPanel: 准备插入K码: K04_02_02
2025-04-23 13:18:23,896 [DEBUG] gui.config_panel - ConfigPanel: 获取根窗口成功
2025-04-23 13:18:23,897 [DEBUG] gui.config_panel - ConfigPanel: 获取MainWindow实例成功
2025-04-23 13:18:23,898 [DEBUG] gui.config_panel - ConfigPanel: 找到逻辑面板
2025-04-23 13:18:23,898 [DEBUG] gui.logic_panel - LogicPanel: 开始插入代码: K04_02_02
2025-04-23 13:18:23,899 [INFO] gui.logic_panel - LogicPanel: 输入历史 - 类型: K_code, 内容: K04_02_02, 当前表达式: K04_02_02 
2025-04-23 13:18:23,900 [INFO] gui.config_panel - ConfigPanel: 成功发送代码到逻辑面板: K04_02_02
2025-04-23 13:18:28,264 [INFO] gui.logic_panel - LogicPanel: 输入历史 - 类型: operator, 内容: →, 当前表达式: K04_02_02  → 
2025-04-23 13:18:28,984 [DEBUG] gui.bom_panel - BomPanel: 双击选中项 ID: I003
2025-04-23 13:18:28,985 [DEBUG] gui.bom_panel - BomPanel: 选中项文本: [2] PL-GrundKabine 10019232 - Modulkabine Standard MAN Euro 6 18T
Modul cabin standard MAN Euro 6 18T
(Z-Cab NG Alpas 3 RAL 3020
Z-Cab NG Alpas 3 RAL 3020)
2025-04-23 13:18:28,985 [DEBUG] gui.bom_panel - BomPanel: 提取到占位符: PL-GrundKabine, Baugruppe: 10019232
2025-04-23 13:18:28,986 [INFO] gui.bom_panel - BomPanel: 准备插入BOM码: PL-GrundKabine-10019232
2025-04-23 13:18:28,987 [DEBUG] gui.bom_panel - BomPanel: 获取根窗口成功
2025-04-23 13:18:28,987 [DEBUG] gui.bom_panel - BomPanel: 获取MainWindow实例成功
2025-04-23 13:18:28,987 [DEBUG] gui.bom_panel - BomPanel: 找到逻辑面板
2025-04-23 13:18:28,988 [DEBUG] gui.logic_panel - LogicPanel: 开始插入代码: PL-GrundKabine-10019232
2025-04-23 13:18:28,989 [DEBUG] gui.logic_panel - 验证BOM码: PL-GrundKabine-10019232
2025-04-23 13:18:28,989 [INFO] gui.logic_panel - LogicPanel: 输入历史 - 类型: BOM_code, 内容: PL-GrundKabine-10019232, 当前表达式: K04_02_02  → PL-GrundKabine-10019232 
2025-04-23 13:18:28,990 [INFO] gui.bom_panel - BomPanel: 成功发送代码到逻辑面板: PL-GrundKabine-10019232
2025-04-23 13:19:31,428 [ERROR] gui.logic_rule_editor - 保存规则时出错: type object 'ExpressionValidator' has no attribute 'validate_static_expression'
Traceback (most recent call last):
  File "c:\Users\mengy\Desktop\ZK_LogicBom_Builder\gui\logic_rule_editor.py", line 245, in _on_confirm
    valid, message = self.logic_builder._validate_static_expression(condition)
                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^
  File "c:\Users\mengy\Desktop\ZK_LogicBom_Builder\core\logic_builder.py", line 352, in _validate_static_expression
    return ExpressionValidator.validate_static_expression(expr, self.config_processor, is_relation_right_side)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: type object 'ExpressionValidator' has no attribute 'validate_static_expression'. Did you mean: 'validate_bool_expression'?
2025-04-23 13:20:11,083 [INFO] gui.language_dialog_tk - 已选择语言: de
2025-04-23 13:21:30,562 [ERROR] gui.logic_rule_editor - 保存规则时出错: type object 'ExpressionValidator' has no attribute 'validate_static_expression'
Traceback (most recent call last):
  File "c:\Users\mengy\Desktop\ZK_LogicBom_Builder\gui\logic_rule_editor.py", line 245, in _on_confirm
    valid, message = self.logic_builder._validate_static_expression(condition)
                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^
  File "c:\Users\mengy\Desktop\ZK_LogicBom_Builder\core\logic_builder.py", line 352, in _validate_static_expression
    return ExpressionValidator.validate_static_expression(expr, self.config_processor, is_relation_right_side)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: type object 'ExpressionValidator' has no attribute 'validate_static_expression'. Did you mean: 'validate_bool_expression'?
